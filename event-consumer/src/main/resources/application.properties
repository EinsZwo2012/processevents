server.port=8083

#Consumer group name
spring.cloud.stream.bindings.processevents.group=processevents
spring.cloud.stream.bindings.processinstances.group=processinstances

#Destination (Topic) Bindings
spring.cloud.stream.bindings.processinstancesIn.destination=processinstances
spring.cloud.stream.bindings.processinstancesOut.destination=processinstances

#Retrys
spring.cloud.stream.bindings.processevents.consumer.back-off-initial-interval=5000
spring.cloud.stream.bindings.processevents.consumer.back-off-max-interval=60000
spring.cloud.stream.bindings.processevents.consumer.back-off-multiplier=2
spring.cloud.stream.bindings.processevents.consumer.max-attempts=5

#Dead letter queue
spring.cloud.stream.kafka.bindings.processevents.consumer.enable-dlq=true
spring.cloud.stream.kafka.bindings.processevents.consumer.dlq-name=processeventerrors
spring.cloud.stream.kafka.bindings.processinstances.consumer.enable-dlq=true
spring.cloud.stream.kafka.bindings.processinstances.consumer.dlq-name=processinstanceserrors

#Does not work if dead letter queue is enabled
#spring.cloud.stream.kafka.bindings.processevents.consumer.auto-commit-on-error=true
#spring.cloud.stream.kafka.bindings.elasticIn.consumer.auto-commit-on-error=true

#Read only committed messages
spring.cloud.stream.kafka.bindings.processevents.consumer.configuration.isolation.level=read_committed
spring.cloud.stream.kafka.bindings.elastic.consumer.configuration.isolation.level=read_committed

#Custom headers transported by the binder 
spring.cloud.stream.kafka.binder.auto-create-topics=false

#Since Spring Boot 2.1.0
spring.main.allow-bean-definition-overriding=true
