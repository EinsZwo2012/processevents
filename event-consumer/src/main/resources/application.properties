server.port=8083

#Consumer group name
spring.cloud.stream.bindings.processevents.group=processevents
spring.cloud.stream.bindings.elasticIn.group=elastic

#Destination (Topic) Bindings
spring.cloud.stream.bindings.elasticOut.destination=elastic
spring.cloud.stream.bindings.elasticIn.destination=elastic

#Dead letter queue
spring.cloud.stream.kafka.bindings.processevents.consumer.enable-dlq=true
spring.cloud.stream.kafka.bindings.elasticIn.consumer.enable-dlq=true
spring.cloud.stream.kafka.bindings.elasticIn.consumer.dlq-name=elasticerrors
spring.cloud.stream.kafka.bindings.processevents.consumer.dlq-name=processeventerrors

#Does not work if dead letter queue is enabled
#spring.cloud.stream.kafka.bindings.processevents.consumer.auto-commit-on-error=true
#spring.cloud.stream.kafka.bindings.elasticIn.consumer.auto-commit-on-error=true

#Read only committed messages
spring.cloud.stream.kafka.bindings.processevents.consumer.configuration.isolation.level=read_committed
spring.cloud.stream.kafka.bindings.elastic.consumer.configuration.isolation.level=read_committed